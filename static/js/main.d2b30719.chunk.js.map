{"version":3,"sources":["context.js","other/image/SenpaiWoop.gif","components/Info/Info.jsx","other/listReducer.js","components/InputArea/InputArea.jsx","components/InputArea/InputAreaContainer.jsx","components/Table/Head/Head.jsx","components/Table/Head/HeadContainer.jsx","components/Table/Item/Item.jsx","components/Table/Table.jsx","components/Table/TableContainer.jsx","components/Table/PagesBtn/PageBtn.jsx","components/Table/PagesBtn/PageBtnContainer.jsx","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["Context","React","createContext","Info","user","className","style","user_info","src","senpaiWoop","status","data","firstName","lastName","id","value","description","address","streetAddress","city","state","zip","SET_DATA","SET_SORT_TOOGLE","SET_GROW_LIST","SET_DIG_LIST","CHANGE_INPUT_VALUE","FIND_POSITION","SET_USER_DATA","SET_PAGE","setSortToogleAC","key","type","listReducer","action","dataList","visibleList","currentUser","tableHeader","map","item","sortKey","activeSort","sort","a","b","localeCompare","inputValue","filter","toLowerCase","includes","email","phone","tableListOption","currentPage","page","InputArea","findPosition","input_block","onChange","InputAreaContainer","useContext","Head","setGrowList","setDigList","onClick","normalCell","activeCell","name","HeadContainer","Item","getUserInfo","Table","indexOf","pageSize","TableContainer","length","PageBtn","pages","setPage","pages_block","page_btn","PageBtnContainer","i","Math","ceil","itemsNumber","push","App","useReducer","dispatch","userData","useEffect","localData","Provider","event","text","target","setPageAC","container","table_area","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d2b30719.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext()","export default __webpack_public_path__ + \"static/media/SenpaiWoop.a4ff2e4c.gif\";","import React from 'react'\r\nimport senpaiWoop from './../../other/image/SenpaiWoop.gif'\r\nimport style from './../../App.module.css'\r\n\r\nconst Info = ({ user }) => {\r\n    return (\r\n        <div className={style.user_info}>\r\n            <img src={senpaiWoop} />\r\n            <div>\r\n                {user.status == false\r\n                    ? <span>Choose user</span>\r\n                    : <p >\r\n                        Выбран пользователь <b>{user.data.firstName} {user.data.lastName}</b><br />\r\n                ID: <b>{user.data.id}</b><br />\r\n                Описание:<br />\r\n                        <textarea value={user.data.description} /><br />\r\n                Адрес проживания: <b>{user.data.address.streetAddress}</b><br />\r\n                Город: <b>{user.data.address.city}</b><br />\r\n                Провинция/штат: <b>{user.data.address.state}</b><br />\r\n                Индекс: <b>{user.data.address.zip}</b><br />\r\n                    </p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info","const SET_DATA = 'SET_DATA'\r\nconst SET_SORT_TOOGLE = 'SET_SORT_TOOGLE'\r\nconst SET_GROW_LIST = 'SET_GROW_LIST'\r\nconst SET_DIG_LIST = 'SET_DIG_LIST'\r\nconst CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE'\r\nconst FIND_POSITION = 'FIND_POSITION'\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst SET_PAGE = 'SET_PAGE'\r\n\r\nconst listReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA: {\r\n            return {\r\n                ...state,\r\n                dataList: action.data,\r\n                visibleList: action.data,\r\n            }\r\n        }\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                currentUser: {\r\n                    ...state.currentUser,\r\n                    status: true,\r\n                    data: action.user\r\n                }\r\n            }\r\n        }\r\n        case SET_SORT_TOOGLE: {\r\n            return {\r\n                ...state,\r\n                tableHeader: [...state.tableHeader.map(item => item.sortKey == action.key\r\n                    ? item.activeSort\r\n                        ? {\r\n                            ...item,\r\n                            activeSort: !item.activeSort\r\n                        }\r\n                        : {\r\n                            ...item,\r\n                            activeSort: true\r\n                        }\r\n                    : {\r\n                        ...item,\r\n                        activeSort: null\r\n                    })]\r\n            }\r\n        }\r\n        case SET_GROW_LIST: {\r\n            return {\r\n                ...state,\r\n                visibleList: [...state.dataList.sort((a, b) => typeof (a[action.sortKey]) === 'string'\r\n                    ? a[action.sortKey].localeCompare(b[action.sortKey])\r\n                    : a[action.sortKey] - b[action.sortKey])\r\n                ]\r\n            }\r\n        }\r\n        case SET_DIG_LIST: {\r\n            return {\r\n                ...state,\r\n                visibleList: [...state.dataList.sort((a, b) => typeof (b[action.sortKey]) === 'string'\r\n                    ? b[action.sortKey].localeCompare(a[action.sortKey])\r\n                    : b[action.sortKey] - a[action.sortKey])\r\n                ]\r\n            }\r\n        }\r\n        case CHANGE_INPUT_VALUE: {\r\n            return {\r\n                ...state,\r\n                inputValue: action.value\r\n            }\r\n        }\r\n        case FIND_POSITION: {\r\n            return {\r\n                ...state,\r\n                visibleList: [...state.dataList.filter(item => item.firstName.toLowerCase().includes(state.inputValue, 0)\r\n                    || item.lastName.toLowerCase().includes(state.inputValue, 0)\r\n                    || item.email.toLowerCase().includes(state.inputValue, 0)\r\n                    || item.phone.includes(state.inputValue, 0))]\r\n            }\r\n        }\r\n        case SET_PAGE: {\r\n            return {\r\n                ...state,\r\n                tableListOption: {\r\n                    ...state.tableListOption,\r\n                    currentPage: action.page\r\n\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setDataAC = (data) => {\r\n    return {\r\n        type: SET_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport const setSortToogleAC = (key) => {\r\n    return {\r\n        type: SET_SORT_TOOGLE,\r\n        key\r\n    }\r\n}\r\n\r\nexport const setGrowListAC = (sortKey) => {\r\n    return {\r\n        type: SET_GROW_LIST,\r\n        sortKey\r\n    }\r\n}\r\n\r\nexport const setDigListAC = (sortKey) => {\r\n    return {\r\n        type: SET_DIG_LIST,\r\n        sortKey\r\n    }\r\n}\r\n\r\nexport const changeInputValueAC = (value) => {\r\n    return {\r\n        type: CHANGE_INPUT_VALUE,\r\n        value\r\n    }\r\n}\r\n\r\nexport const findPositionAC = () => {\r\n    return {\r\n        type: FIND_POSITION\r\n    }\r\n}\r\n\r\nexport const setUserAC = (user) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        user\r\n    }\r\n}\r\nexport const setPageAC = (page) => {\r\n    return {\r\n        type: SET_PAGE,\r\n        page\r\n    }\r\n}\r\n\r\nexport default listReducer","import React from 'react'\r\nimport style from './../../App.module.css'\r\n\r\nconst InputArea = ({ findPosition, inputValue }) => {\r\n\r\n    return (\r\n        <div className={style.input_block}>\r\n            <input type='text'\r\n                onChange={findPosition}\r\n                value={inputValue} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputArea","import React, { useContext } from  'react'\r\nimport { Context } from '../../context'\r\nimport InputArea from './InputArea'\r\n\r\nconst InputAreaContainer = () => {\r\n\r\n    const {findPosition, inputValue} = useContext(Context)\r\n\r\n    return(\r\n      <InputArea inputValue={inputValue}\r\n      findPosition={findPosition}/>\r\n    )\r\n}\r\n\r\nexport default InputAreaContainer","import React from 'react'\r\nimport style from './../../../App.module.css'\r\n\r\nconst Head = ({ tableHeader, setGrowList, setDigList }) => {\r\n    return (\r\n        <tr>\r\n            {\r\n                tableHeader.map(item => <th\r\n                    onClick={item.activeSort == null || item.activeSort == false\r\n                        ? () => setGrowList(item.sortKey)\r\n                        : () => setDigList(item.sortKey)\r\n                    }\r\n                    className={item.activeSort == null\r\n                        ? style.normalCell\r\n                        : style.activeCell}\r\n                >{item.name} {\r\n                        item.activeSort == null || item.activeSort == false\r\n                            ? <span>&darr; </span>\r\n                            : <span>&uarr; </span>\r\n                    }\r\n                </th>)\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Head","import React, { useContext } from 'react'\r\nimport { Context } from '../../../context'\r\nimport Head from './Head'\r\n\r\nconst HeadContainer = () => {\r\n\r\n    const { tableHeader, setGrowList, setDigList } = useContext(Context)\r\n\r\n    return (\r\n        <Head tableHeader={tableHeader}\r\n            setGrowList={setGrowList}\r\n            setDigList={setDigList} />\r\n    )\r\n}\r\n\r\nexport default HeadContainer","import React from 'react'\r\n\r\nconst Item = ({ item, getUserInfo }) => {\r\n    return (\r\n        <tr onClick={() => getUserInfo(item)}>\r\n            <td>{item.id}</td>\r\n            <td>{item.firstName}</td>\r\n            <td>{item.lastName}</td>\r\n            <td>{item.email}</td>\r\n            <td>{item.phone}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport HeadContainer from './Head/HeadContainer'\r\nimport Item from './Item/Item'\r\n\r\nconst Table = ({ data, getUserInfo, tableListOption }) => {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <HeadContainer />\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map(item => {\r\n                        if (data.indexOf(item) >= (tableListOption.currentPage - 1) * tableListOption.pageSize\r\n                            && data.indexOf(item) < tableListOption.currentPage * tableListOption.pageSize) {\r\n                            return <Item item={item}\r\n                                getUserInfo={getUserInfo} />\r\n\r\n\r\n                        }\r\n                    }\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","import React, { useContext } from 'react'\r\nimport { Context } from '../../context'\r\nimport Table from './Table'\r\n\r\nconst TableContainer = () => {\r\n\r\n    const { data, getUserInfo, tableListOption } = useContext(Context)\r\n\r\n\r\n    return (\r\n        data.length == 0\r\n            ? <div>not found</div>\r\n            : <Table data={data}\r\n                getUserInfo={getUserInfo}\r\n                tableListOption={tableListOption} />\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default TableContainer","import React from 'react'\r\nimport style from './../../../App.module.css'\r\n\r\nconst PageBtn = ({ pages, setPage }) => {\r\n    return (\r\n        <div className={style.pages_block}>\r\n            {\r\n                pages.map(item => <button onClick={() => setPage(item)}\r\n                    className={style.page_btn}>\r\n                    {item}\r\n                </button>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageBtn","import React, { useContext } from 'react'\r\nimport { Context } from '../../../context'\r\nimport PageBtn from './PageBtn'\r\n\r\nconst PageBtnContainer = () => {\r\n\r\n    const { tableListOption, setPage } = useContext(Context)\r\n\r\n    var pages = []\r\n    for (let i = 1; i <= Math.ceil(tableListOption.itemsNumber / tableListOption.pageSize); i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <PageBtn pages={pages}\r\n        setPage={setPage}/>\r\n    )\r\n}\r\n\r\nexport default PageBtnContainer","import React, { useReducer, useEffect } from 'react';\nimport { Context } from './context';\nimport Info from './components/Info/Info';\nimport listReducer, { changeInputValueAC, findPositionAC, setDataAC, setDigListAC, setGrowListAC, setSortToogleAC, setUserAC, setPageAC } from './other/listReducer';\nimport style from './App.module.css'\nimport InputAreaContainer from './components/InputArea/InputAreaContainer';\nimport TableContainer from './components/Table/TableContainer';\nimport PageBtnContainer from './components/Table/PagesBtn/PageBtnContainer';\nimport localData from './other/localData/localData.json'\n\nconst App = () => {\n\n  let defaultState = {\n    inputValue: '',\n    tableHeader: [\n      { name: 'ID', sortKey: 'id', activeSort: null },\n      { name: 'Имя', sortKey: 'firstName', activeSort: null },\n      { name: 'Фамилия', sortKey: 'lastName', activeSort: null },\n      { name: 'Почта', sortKey: 'email', activeSort: null },\n      { name: 'Телефон', sortKey: 'phone', activeSort: null },\n    ],\n    dataList: [],\n    visibleList: [],\n    currentUser: {\n      status: false\n    },\n    tableListOption: {\n      itemsNumber: 1000,\n      pageSize: 25,\n      currentPage: 1,\n    }\n  }\n\n  const [state, dispatch] = useReducer(listReducer, defaultState)\n\n  /* const url = `http://www.filltext.com/?rows=${state.tableListOption.itemsNumber}&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D`\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(result => dispatch(setDataAC(result))\n      )\n  }, [])  для работы с ссылкой */ \n\n  useEffect(() => {\n      dispatch(setDataAC(localData))\n  }, [])\n\n  function setGrowList(key) {\n    dispatch(setSortToogleAC(key))\n    dispatch(setGrowListAC(key))\n  }\n\n  function setDigList(key) {\n    dispatch(setSortToogleAC(key))\n    dispatch(setDigListAC(key))\n  }\n\n  function findPosition(event) {\n    let text = event.target.value\n    dispatch(changeInputValueAC(text))\n    dispatch(findPositionAC())\n  }\n\n  function getUserInfo(userData) {\n    dispatch(setUserAC(userData))\n  }\n\n  function setPage(page) {\n    dispatch(setPageAC(page))\n  }\n\n  return (\n    <Context.Provider value={{\n      data: state.visibleList,\n      inputValue: state.inputValue,\n      tableHeader: state.tableHeader,\n      tableListOption: state.tableListOption,\n      findPosition,\n      setGrowList,\n      setDigList,\n      getUserInfo,\n      setPage\n    }}>\n      <div className={style.container}>\n        <div className={style.table_area}>\n          <InputAreaContainer />\n          <TableContainer />\n          <PageBtnContainer />\n        </div>\n        <Info getUserInfo={getUserInfo}\n          user={state.currentUser} />\n      </div>\n    </Context.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3CZ1b\",\"table_area\":\"App_table_area__acg6n\",\"user_info\":\"App_user_info__1g2fh\",\"input_block\":\"App_input_block__ANIfS\",\"pages_block\":\"App_pages_block__2CJfz\",\"page_btn\":\"App_page_btn__38ftL\",\"normalCell\":\"App_normalCell__YOHwA\",\"activeCell\":\"App_activeCell__2UgEy\"};"],"sourceRoot":""}